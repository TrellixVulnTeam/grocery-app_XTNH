{"ast":null,"code":"import { act } from \"react-dom/test-utils\";\nimport data from \"../groceries/data\";\nlet initialState = {\n  data: data,\n  product: data,\n  search: \"\",\n  qty: 0,\n  cart: []\n};\n\nconst home = (state = initialState, action) => {\n  // console.log(action.payload);\n  let isPresent = state.cart.find(obj => {\n    return obj.id == action.payload.id;\n  });\n\n  switch (action.type) {\n    case \"addInBasket\":\n      let arr = [];\n      let basketObj = [];\n\n      if (isPresent == undefined) {\n        //    let obj={...action.payload,qty:1} \n        basketObj = [...state.cart, { ...action.payload,\n          qty: 1\n        }];\n      } else {\n        basketObj = increaseQuantity(state.cart, action);\n      }\n\n      arr = increaseQuantity(state.data, action);\n      return { ...state,\n        data: arr,\n        qty: state.qty + 1,\n        cart: basketObj\n      };\n\n    case \"removeFromBasket\":\n      let arr2 = [];\n      let cartObj = [];\n      let actionQty = action.payload.id;\n\n      if (action.payload.qty == 2) {\n        cartObj = removeFromCart(state.cart, action);\n      } else {\n        cartObj = decreaseQuantity(state.cart, action);\n      }\n\n      return { ...state,\n        qty: state.qty - 1,\n        cart: cartObj\n      };\n\n    default:\n      return state;\n  }\n};\n\nfunction increaseQuantity(array, action) {\n  let temp = [];\n\n  for (let i = 0; i < array.length; i++) {\n    let obj = array[i];\n\n    if (array[i].id == action.payload.id) {\n      obj = { ...array[i],\n        qty: array[i].qty + 1\n      };\n      temp[i] = obj;\n    } else {\n      temp[i] = obj;\n    }\n  }\n\n  return temp;\n}\n\nfunction decreaseQuantity(array, action) {\n  let temp = [];\n\n  for (let i = 0; i < array.length; i++) {\n    let obj = array[i];\n\n    if (array[i].id == action.payload.id) {\n      obj = { ...array[i],\n        qty: array[i].qty - 1\n      };\n      temp[i] = obj;\n    } else {\n      temp[i] = obj;\n    }\n  }\n\n  return temp;\n}\n\nfunction removeFromCart(array, action) {\n  let temp = array.filter(obj => {\n    return obj.id != action.payload.id;\n  });\n  return temp;\n}\n\nexport default home;","map":{"version":3,"sources":["/home/avnish.singh/Avnish/react/grocery-store/src/reducer/home.js"],"names":["act","data","initialState","product","search","qty","cart","home","state","action","isPresent","find","obj","id","payload","type","arr","basketObj","undefined","increaseQuantity","arr2","cartObj","actionQty","removeFromCart","decreaseQuantity","array","temp","i","length","filter"],"mappings":"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","sourcesContent":["import { act } from \"react-dom/test-utils\"\nimport data from \"../groceries/data\"\nlet initialState={\n    data:data,\n    product:data,\n    search:\"\",\n    qty:0,\n    cart:[]\n}\nconst home=(state=initialState,action)=>{\n    // console.log(action.payload);\n    let isPresent=state.cart.find(obj=>{\n        return obj.id==action.payload.id\n    })  \n    switch (action.type) {\n        case \"addInBasket\":\n            let arr=[]\n            let basketObj=[]\n            if(isPresent==undefined){\n            //    let obj={...action.payload,qty:1} \n                basketObj=[...state.cart,{...action.payload,qty:1} ]\n            }else{\n                basketObj=increaseQuantity(state.cart,action)\n            }\n            arr=increaseQuantity(state.data,action)\n            return {\n                ...state,\n                data:arr,\n                qty:state.qty+1,\n                cart:basketObj\n            }\n        case \"removeFromBasket\":\n            let arr2=[]\n            let cartObj=[]\n            let actionQty=action.payload.id\n            if(action.payload.qty==2){\n                cartObj=removeFromCart(state.cart,action)\n\n            }else{\n                cartObj=decreaseQuantity(state.cart,action)\n            }\n            return{\n                ...state,\n                qty:state.qty-1,\n                cart:cartObj\n            }\n        default:\n            return state\n    }\n}\n\nfunction increaseQuantity(array,action){\n    let temp=[]\n    for(let i=0;i<array.length;i++){\n        let obj=array[i]\n        if(array[i].id==action.payload.id){\n            obj={...array[i],qty:array[i].qty+1}\n            temp[i]=obj\n        }else{\n            temp[i]=obj\n        }\n    }\n    return temp\n}\nfunction decreaseQuantity(array,action){\n    let temp=[]\n    for(let i=0;i<array.length;i++){\n        let obj=array[i]\n        if(array[i].id==action.payload.id){\n            obj={...array[i],qty:array[i].qty-1}\n            temp[i]=obj\n        }else{\n            temp[i]=obj\n        }\n    }\n    return temp\n}\nfunction removeFromCart(array,action){\n    let temp=array.filter(obj=>{\n        return obj.id!=action.payload.id\n    })\n    return temp\n}\nexport default home"]},"metadata":{},"sourceType":"module"}