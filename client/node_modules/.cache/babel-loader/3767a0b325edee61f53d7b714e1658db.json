{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nexport default function useBasket() {\n  _s();\n\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth.currUser);\n  const cart = useSelector(state => state.cart.cart);\n  const history = useHistory();\n\n  const addBasket = async obj => {\n    if (auth) {\n      let arr = [];\n      let basketObj = [];\n      let isPresent = cart.find(item => {\n        return item.id == obj.id;\n      });\n\n      if (isPresent == undefined) {\n        basketObj = [...state.cart, { ...action.payload,\n          qty: 1\n        }];\n      } else {\n        basketObj = increaseQuantity(state.cart, action);\n      }\n\n      dispatch({\n        type: \"addInBasket\",\n        payload: obj\n      });\n    } else {\n      alert(\"please login first\");\n      history.push(\"/login\");\n    }\n  };\n\n  const removeBasket = obj => {\n    if (auth) {\n      dispatch({\n        type: \"removeFromBasket\",\n        payload: obj\n      });\n    } else {\n      alert(\"please login first\");\n      history.push(\"/login\");\n    }\n  };\n\n  const deleteBasket = obj => {\n    if (auth) {\n      dispatch({\n        type: \"deleteItem\",\n        payload: obj\n      });\n    } else {\n      alert(\"please login first\");\n      history.push(\"/login\");\n    }\n  };\n\n  return [addBasket, removeBasket, deleteBasket];\n}\n\n_s(useBasket, \"VSvlCsgXStevtuEKNmnvqRTZk6E=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useHistory];\n});","map":{"version":3,"sources":["/home/avnish.singh/Avnish/grocery-app/client/src/component/useBasket.js"],"names":["axios","React","useDispatch","useSelector","useHistory","useBasket","dispatch","auth","state","currUser","cart","history","addBasket","obj","arr","basketObj","isPresent","find","item","id","undefined","action","payload","qty","increaseQuantity","type","alert","push","removeBasket","deleteBasket"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAChC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,IAAI,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,IAAN,CAAWE,QAArB,CAAxB;AACA,QAAMC,IAAI,GAAGP,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACE,IAAN,CAAWA,IAArB,CAAxB;AACA,QAAMC,OAAO,GAAGP,UAAU,EAA1B;;AAEA,QAAMQ,SAAS,GAAG,MAAOC,GAAP,IAAe;AAC7B,QAAIN,IAAJ,EAAU;AACN,UAAIO,GAAG,GAAG,EAAV;AACA,UAAIC,SAAS,GAAG,EAAhB;AACA,UAAIC,SAAS,GAAGN,IAAI,CAACO,IAAL,CAAWC,IAAD,IAAU;AAChC,eAAOA,IAAI,CAACC,EAAL,IAAWN,GAAG,CAACM,EAAtB;AACH,OAFe,CAAhB;;AAGA,UAAIH,SAAS,IAAII,SAAjB,EAA4B;AACxBL,QAAAA,SAAS,GAAG,CAAC,GAAGP,KAAK,CAACE,IAAV,EAAgB,EAAE,GAAGW,MAAM,CAACC,OAAZ;AAAqBC,UAAAA,GAAG,EAAE;AAA1B,SAAhB,CAAZ;AACH,OAFD,MAEO;AACHR,QAAAA,SAAS,GAAGS,gBAAgB,CAAChB,KAAK,CAACE,IAAP,EAAaW,MAAb,CAA5B;AACH;;AACDf,MAAAA,QAAQ,CAAC;AACLmB,QAAAA,IAAI,EAAE,aADD;AAELH,QAAAA,OAAO,EAAET;AAFJ,OAAD,CAAR;AAIH,KAfD,MAeO;AACHa,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACAf,MAAAA,OAAO,CAACgB,IAAR,CAAa,QAAb;AACH;AACJ,GApBD;;AAqBA,QAAMC,YAAY,GAAIf,GAAD,IAAS;AAC1B,QAAIN,IAAJ,EAAU;AACND,MAAAA,QAAQ,CAAC;AACLmB,QAAAA,IAAI,EAAE,kBADD;AAELH,QAAAA,OAAO,EAAET;AAFJ,OAAD,CAAR;AAIH,KALD,MAMK;AACDa,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACAf,MAAAA,OAAO,CAACgB,IAAR,CAAa,QAAb;AACH;AACJ,GAXD;;AAYA,QAAME,YAAY,GAAIhB,GAAD,IAAS;AAE1B,QAAIN,IAAJ,EAAU;AACND,MAAAA,QAAQ,CAAC;AACLmB,QAAAA,IAAI,EAAE,YADD;AAELH,QAAAA,OAAO,EAAET;AAFJ,OAAD,CAAR;AAIH,KALD,MAKO;AACHa,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACAf,MAAAA,OAAO,CAACgB,IAAR,CAAa,QAAb;AACH;AACJ,GAXD;;AAYA,SAAO,CAACf,SAAD,EAAYgB,YAAZ,EAA0BC,YAA1B,CAAP;AACH;;GApDuBxB,S;UACHH,W,EACJC,W,EACAA,W,EACGC,U","sourcesContent":["import axios from 'axios';\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nexport default function useBasket() {\n    const dispatch = useDispatch();\n    const auth = useSelector(state => state.auth.currUser)\n    const cart = useSelector(state => state.cart.cart)\n    const history = useHistory()\n\n    const addBasket = async (obj) => {\n        if (auth) {\n            let arr = [];\n            let basketObj = [];\n            let isPresent = cart.find((item) => {\n                return item.id == obj.id\n            });\n            if (isPresent == undefined) {\n                basketObj = [...state.cart, { ...action.payload, qty: 1 }];\n            } else {\n                basketObj = increaseQuantity(state.cart, action);\n            }\n            dispatch({\n                type: \"addInBasket\",\n                payload: obj,\n            });\n        } else {\n            alert(\"please login first\")\n            history.push(\"/login\")\n        }\n    };\n    const removeBasket = (obj) => {\n        if (auth) {\n            dispatch({\n                type: \"removeFromBasket\",\n                payload: obj,\n            });\n        }\n        else {\n            alert(\"please login first\")\n            history.push(\"/login\")\n        }\n    };\n    const deleteBasket = (obj) => {\n\n        if (auth) {\n            dispatch({\n                type: \"deleteItem\",\n                payload: obj,\n            });\n        } else {\n            alert(\"please login first\")\n            history.push(\"/login\")\n        }\n    };\n    return [addBasket, removeBasket, deleteBasket];\n}\n"]},"metadata":{},"sourceType":"module"}