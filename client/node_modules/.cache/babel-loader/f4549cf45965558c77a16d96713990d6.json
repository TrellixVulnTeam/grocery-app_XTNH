{"ast":null,"code":"let initialState = {\n  qty: 0,\n  cart: [],\n  cartItems: {}\n};\n\nconst cart = (state = initialState, action) => {\n  switch (action.type) {\n    case \"addInBasket\":\n      let arr = [];\n      let basketObj = [];\n      let isPresent = state.cart.find(obj => {\n        return obj.id == action.payload.id;\n      });\n\n      if (isPresent == undefined) {\n        //    let obj={...action.payload,qty:1}\n        basketObj = [...state.cart, { ...action.payload,\n          qty: 1\n        }];\n      } else {\n        basketObj = increaseQuantity(state.cart, action);\n      }\n\n      let id = action.payload;\n      let obj = { ...state.cartItems\n      };\n      arr = increaseQuantity(state.cart, action);\n      console.log(obj);\n      return { ...state,\n        qty: state.qty + 1,\n        cart: basketObj,\n        cartItems: obj\n      };\n\n    case \"removeFromBasket\":\n      let arr2 = [];\n      let cartObj = [];\n\n      if (action.payload.qty == 1) {\n        cartObj = removeFromCart(state.cart, action);\n      } else {\n        cartObj = decreaseQuantity(state.cart, action);\n      }\n\n      arr2 = decreaseQuantity(state.cart, action); //    let quantityNo=state.qty>0?state.qty-1:\n\n      return { ...state,\n        data: arr2,\n        qty: state.qty > 0 ? state.qty - 1 : 0,\n        cart: cartObj\n      };\n\n    case \"deleteItem\":\n      let newObj = removeFromCart(state.cart, action);\n      let newObj2 = state.data.map(obj => {\n        if (obj.id == action.payload.id) {\n          return { ...obj,\n            qty: 0\n          };\n        } else {\n          return obj;\n        }\n      });\n      return {\n        data: newObj2,\n        qty: state.qty - action.payload.qty,\n        cart: newObj\n      };\n\n    default:\n      return state;\n  }\n};\n\nfunction increaseQuantity(array, action) {\n  let temp = [];\n  console.log(array, action);\n\n  for (let i = 0; i < array.length; i++) {\n    let obj = array[i];\n\n    if (array[i].id == action.payload.id) {\n      obj = { ...array[i],\n        qty: array[i].qty + 1\n      };\n      temp[i] = obj;\n    } else {\n      temp[i] = obj;\n    }\n  }\n\n  return temp;\n}\n\nfunction decreaseQuantity(array, action) {\n  let temp = [];\n\n  for (let i = 0; i < array.length; i++) {\n    let obj = array[i];\n\n    if (array[i].id == action.payload.id) {\n      obj = { ...array[i],\n        qty: array[i].qty > 0 ? array[i].qty - 1 : 0\n      };\n      temp[i] = obj;\n    } else {\n      temp[i] = obj;\n    }\n  }\n\n  return temp;\n}\n\nfunction removeFromCart(array, action) {\n  let temp = array.filter(obj => {\n    return obj.id != action.payload.id;\n  });\n  return temp;\n}\n\nexport default cart;","map":{"version":3,"sources":["/home/avnish.singh/Avnish/grocery-app/client/src/reducer/cart.js"],"names":["initialState","qty","cart","cartItems","state","action","type","arr","basketObj","isPresent","find","obj","id","payload","undefined","increaseQuantity","console","log","arr2","cartObj","removeFromCart","decreaseQuantity","data","newObj","newObj2","map","array","temp","i","length","filter"],"mappings":"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","sourcesContent":["let initialState = {\n    qty: 0,\n    cart: [],\n    cartItems: {}\n}\nconst cart = (state = initialState, action) => {\n    switch (action.type) {\n        case \"addInBasket\":\n            let arr = [];\n            let basketObj = [];\n            let isPresent = state.cart.find((obj) => {\n                return obj.id == action.payload.id;\n            });\n            if (isPresent == undefined) {\n                //    let obj={...action.payload,qty:1}\n                basketObj = [...state.cart, { ...action.payload, qty: 1 }];\n            } else {\n                basketObj = increaseQuantity(state.cart, action);\n            }\n            let id = action.payload\n            let obj = { ...state.cartItems }\n            arr = increaseQuantity(state.cart, action);\n            console.log(obj);\n            return {\n                ...state,\n                qty: state.qty + 1,\n                cart: basketObj,\n                cartItems: obj\n            };\n        case \"removeFromBasket\":\n            let arr2 = [];\n            let cartObj = [];\n            if (action.payload.qty == 1) {\n                cartObj = removeFromCart(state.cart, action);\n            } else {\n                cartObj = decreaseQuantity(state.cart, action);\n            }\n\n            arr2 = decreaseQuantity(state.cart, action);\n            //    let quantityNo=state.qty>0?state.qty-1:\n            return {\n                ...state,\n                data: arr2,\n                qty: state.qty > 0 ? state.qty - 1 : 0,\n                cart: cartObj,\n            }\n        case \"deleteItem\":\n            let newObj = removeFromCart(state.cart, action);\n            let newObj2 = state.data.map(obj => {\n                if (obj.id == action.payload.id) {\n                    return { ...obj, qty: 0 };\n                } else {\n                    return obj\n                }\n            })\n            return {\n                data: newObj2,\n                qty: state.qty - action.payload.qty,\n                cart: newObj\n            }\n        default: return state\n\n    }\n}\n\nfunction increaseQuantity(array, action) {\n    let temp = [];\n    console.log(array, action);\n    for (let i = 0; i < array.length; i++) {\n        let obj = array[i];\n        if (array[i].id == action.payload.id) {\n            obj = { ...array[i], qty: array[i].qty + 1 };\n            temp[i] = obj;\n        } else {\n            temp[i] = obj;\n        }\n    }\n    return temp;\n}\nfunction decreaseQuantity(array, action) {\n    let temp = [];\n    for (let i = 0; i < array.length; i++) {\n        let obj = array[i];\n        if (array[i].id == action.payload.id) {\n            obj = { ...array[i], qty: array[i].qty > 0 ? array[i].qty - 1 : 0 };\n            temp[i] = obj;\n        } else {\n            temp[i] = obj;\n        }\n    }\n    return temp;\n}\n\nfunction removeFromCart(array, action) {\n    let temp = array.filter((obj) => {\n        return obj.id != action.payload.id;\n    });\n    return temp;\n}\n\nexport default cart"]},"metadata":{},"sourceType":"module"}