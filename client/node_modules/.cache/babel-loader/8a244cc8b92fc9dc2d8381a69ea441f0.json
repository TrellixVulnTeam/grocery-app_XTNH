{"ast":null,"code":"const jwt_decode = require(\"jwt-decode\");\n\nlet initialState = {\n  currUser: null\n};\n\nconst auth = (state = initialState, action) => {\n  // console.log(action.payload);\n  console.log(state.data);\n\n  switch (action.type) {\n    case \"login\":\n      let j = jwt(action.payload.token);\n      console.log(\"token decoded\", j);\n      localStorage.setItem(\"jwt\", action.payload.token);\n      return { ...state,\n        currUser: action.payload.user\n      };\n\n    case \"signup\":\n      let email = action.payload.email;\n      let value = JSON.stringify(action.payload);\n      localStorage.setItem(email, value);\n\n    case \"signout\":\n      return { ...state,\n        currUser: null\n      };\n\n    case \"editUser\":\n      let newUser = action.payload;\n      return { ...state,\n        currUser: newUser\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default auth;","map":{"version":3,"sources":["/home/avnish.singh/Avnish/grocery-app/client/src/reducer/auth.js"],"names":["jwt_decode","require","initialState","currUser","auth","state","action","console","log","data","type","j","jwt","payload","token","localStorage","setItem","user","email","value","JSON","stringify","newUser"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,QAAQ,EAAE;AADK,CAAnB;;AAGA,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC3C;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,IAAlB;;AACA,UAAQH,MAAM,CAACI,IAAf;AAEI,SAAK,OAAL;AAEI,UAAIC,CAAC,GAAGC,GAAG,CAACN,MAAM,CAACO,OAAP,CAAeC,KAAhB,CAAX;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BG,CAA7B;AACAI,MAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BV,MAAM,CAACO,OAAP,CAAeC,KAA3C;AACA,aAAO,EACH,GAAGT,KADA;AAEHF,QAAAA,QAAQ,EAAEG,MAAM,CAACO,OAAP,CAAeI;AAFtB,OAAP;;AAIJ,SAAK,QAAL;AACI,UAAIC,KAAK,GAAGZ,MAAM,CAACO,OAAP,CAAeK,KAA3B;AACA,UAAIC,KAAK,GAAGC,IAAI,CAACC,SAAL,CAAef,MAAM,CAACO,OAAtB,CAAZ;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqBE,KAArB,EAA4BC,KAA5B;;AAEJ,SAAK,SAAL;AACI,aAAO,EACH,GAAGd,KADA;AAEHF,QAAAA,QAAQ,EAAE;AAFP,OAAP;;AAIJ,SAAK,UAAL;AACI,UAAImB,OAAO,GAAGhB,MAAM,CAACO,OAArB;AACA,aAAO,EACH,GAAGR,KADA;AAEHF,QAAAA,QAAQ,EAAEmB;AAFP,OAAP;;AAKJ;AACI,aAAOjB,KAAP;AA7BR;AA+BH,CAlCD;;AAqCA,eAAeD,IAAf","sourcesContent":["const jwt_decode = require(\"jwt-decode\")\n\nlet initialState = {\n    currUser: null,\n};\nconst auth = (state = initialState, action) => {\n    // console.log(action.payload);\n    console.log(state.data);\n    switch (action.type) {\n\n        case \"login\":\n\n            let j = jwt(action.payload.token)\n            console.log(\"token decoded\", j);\n            localStorage.setItem(\"jwt\", action.payload.token)\n            return {\n                ...state,\n                currUser: action.payload.user,\n            };\n        case \"signup\":\n            let email = action.payload.email;\n            let value = JSON.stringify(action.payload);\n            localStorage.setItem(email, value);\n\n        case \"signout\":\n            return {\n                ...state,\n                currUser: null,\n            };\n        case \"editUser\":\n            let newUser = action.payload\n            return {\n                ...state,\n                currUser: newUser,\n            };\n\n        default:\n            return state;\n    }\n};\n\n\nexport default auth;\n"]},"metadata":{},"sourceType":"module"}