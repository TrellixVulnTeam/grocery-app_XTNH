{"ast":null,"code":"let initialState = {\n  qty: 0,\n  cart: []\n};\n\nconst cart = (state = initialState, action) => {\n  switch (action.type) {\n    case \"getCart\":\n      return {\n        cart: action.payload\n      };\n\n    case \"addInBasket\":\n      ;\n      return { ...state,\n        cart: action.payload\n      };\n\n    case \"removeFromBasket\":\n      let arr2 = [];\n      let cartObj = [];\n\n      if (action.payload.qty == 1) {\n        cartObj = removeFromCart(state.cart, action);\n      } else {\n        cartObj = decreaseQuantity(state.cart, action);\n      }\n\n      arr2 = decreaseQuantity(state.cart, action); //    let quantityNo=state.qty>0?state.qty-1:\n\n      return { ...state,\n        data: arr2,\n        qty: state.qty > 0 ? state.qty - 1 : 0,\n        cart: cartObj\n      };\n\n    case \"deleteItem\":\n      let newObj = removeFromCart(state.cart, action);\n      let newObj2 = state.data.map(obj => {\n        if (obj.id == action.payload.id) {\n          return { ...obj,\n            qty: 0\n          };\n        } else {\n          return obj;\n        }\n      });\n      return {\n        data: newObj2,\n        qty: state.qty - action.payload.qty,\n        cart: newObj\n      };\n\n    default:\n      return state;\n  }\n};\n\nfunction increaseQuantity(array, action) {\n  let temp = [];\n  console.log(array, action);\n\n  for (let i = 0; i < array.length; i++) {\n    let obj = array[i];\n\n    if (array[i].id == action.payload.id) {\n      obj = { ...array[i],\n        qty: array[i].qty + 1\n      };\n      temp[i] = obj;\n    } else {\n      temp[i] = obj;\n    }\n  }\n\n  return temp;\n}\n\nfunction decreaseQuantity(array, action) {\n  let temp = [];\n\n  for (let i = 0; i < array.length; i++) {\n    let obj = array[i];\n\n    if (array[i].id == action.payload.id) {\n      obj = { ...array[i],\n        qty: array[i].qty > 0 ? array[i].qty - 1 : 0\n      };\n      temp[i] = obj;\n    } else {\n      temp[i] = obj;\n    }\n  }\n\n  return temp;\n}\n\nfunction removeFromCart(array, action) {\n  let temp = array.filter(obj => {\n    return obj.id != action.payload.id;\n  });\n  return temp;\n}\n\nexport default cart;","map":{"version":3,"sources":["/home/avnish.singh/Avnish/grocery-app/client/src/reducer/cart.js"],"names":["initialState","qty","cart","state","action","type","payload","arr2","cartObj","removeFromCart","decreaseQuantity","data","newObj","newObj2","map","obj","id","increaseQuantity","array","temp","console","log","i","length","filter"],"mappings":"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","sourcesContent":["let initialState = {\n    qty: 0,\n    cart: []\n}\nconst cart = (state = initialState, action) => {\n    switch (action.type) {\n        case \"getCart\":\n            return {\n\n                cart: action.payload,\n            }\n        case \"addInBasket\":\n            ;\n            return {\n                ...state,\n                cart: action.payload\n            };\n        case \"removeFromBasket\":\n            let arr2 = [];\n            let cartObj = [];\n            if (action.payload.qty == 1) {\n                cartObj = removeFromCart(state.cart, action);\n            } else {\n                cartObj = decreaseQuantity(state.cart, action);\n            }\n\n            arr2 = decreaseQuantity(state.cart, action);\n            //    let quantityNo=state.qty>0?state.qty-1:\n            return {\n                ...state,\n                data: arr2,\n                qty: state.qty > 0 ? state.qty - 1 : 0,\n                cart: cartObj,\n            }\n        case \"deleteItem\":\n            let newObj = removeFromCart(state.cart, action);\n            let newObj2 = state.data.map(obj => {\n                if (obj.id == action.payload.id) {\n                    return { ...obj, qty: 0 };\n                } else {\n                    return obj\n                }\n            })\n            return {\n                data: newObj2,\n                qty: state.qty - action.payload.qty,\n                cart: newObj\n            }\n        default: return state\n\n    }\n}\n\n\nfunction increaseQuantity(array, action) {\n    let temp = [];\n    console.log(array, action);\n    for (let i = 0; i < array.length; i++) {\n        let obj = array[i];\n        if (array[i].id == action.payload.id) {\n            obj = { ...array[i], qty: array[i].qty + 1 };\n            temp[i] = obj;\n        } else {\n            temp[i] = obj;\n        }\n    }\n    return temp;\n}\nfunction decreaseQuantity(array, action) {\n    let temp = [];\n    for (let i = 0; i < array.length; i++) {\n        let obj = array[i];\n        if (array[i].id == action.payload.id) {\n            obj = { ...array[i], qty: array[i].qty > 0 ? array[i].qty - 1 : 0 };\n            temp[i] = obj;\n        } else {\n            temp[i] = obj;\n        }\n    }\n    return temp;\n}\n\nfunction removeFromCart(array, action) {\n    let temp = array.filter((obj) => {\n        return obj.id != action.payload.id;\n    });\n    return temp;\n}\n\nexport default cart"]},"metadata":{},"sourceType":"module"}