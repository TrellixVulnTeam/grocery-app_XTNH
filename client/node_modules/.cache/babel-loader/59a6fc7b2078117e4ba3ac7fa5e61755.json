{"ast":null,"code":"import jwt_decode from \"jwt-decode\";\nlet initialState = {\n  currUser: null\n};\n\nconst auth = (state = initialState, action) => {\n  console.log(state.currUser);\n  console.log(state.data);\n\n  switch (action.type) {\n    case \"getUser\":\n      let getUser = localStorage.getItem(\"jwt\");\n\n    case \"login\":\n      localStorage.setItem(\"jwt\", action.payload.token);\n      return { ...state,\n        currUser: action.payload.user\n      };\n\n    case \"signup\":\n      let email = action.payload.email;\n      let value = JSON.stringify(action.payload);\n      localStorage.setItem(email, value);\n\n    case \"signout\":\n      localStorage.setItem(\"jwt\", null);\n      return { ...state,\n        currUser: null\n      };\n\n    case \"editUser\":\n      let newUser = action.payload;\n      return { ...state,\n        currUser: newUser\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default auth;","map":{"version":3,"sources":["/home/avnish.singh/Avnish/grocery-app/client/src/reducer/auth.js"],"names":["jwt_decode","initialState","currUser","auth","state","action","console","log","data","type","getUser","localStorage","getItem","setItem","payload","token","user","email","value","JSON","stringify","newUser"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,IAAIC,YAAY,GAAG;AACfC,EAAAA,QAAQ,EAAE;AADK,CAAnB;;AAIA,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACF,QAAlB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,IAAlB;;AACA,UAAQH,MAAM,CAACI,IAAf;AACI,SAAK,SAAL;AACI,UAAIC,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAd;;AAEJ,SAAK,OAAL;AAEID,MAAAA,YAAY,CAACE,OAAb,CAAqB,KAArB,EAA4BR,MAAM,CAACS,OAAP,CAAeC,KAA3C;AACA,aAAO,EACH,GAAGX,KADA;AAEHF,QAAAA,QAAQ,EAAEG,MAAM,CAACS,OAAP,CAAeE;AAFtB,OAAP;;AAIJ,SAAK,QAAL;AACI,UAAIC,KAAK,GAAGZ,MAAM,CAACS,OAAP,CAAeG,KAA3B;AACA,UAAIC,KAAK,GAAGC,IAAI,CAACC,SAAL,CAAef,MAAM,CAACS,OAAtB,CAAZ;AACAH,MAAAA,YAAY,CAACE,OAAb,CAAqBI,KAArB,EAA4BC,KAA5B;;AAEJ,SAAK,SAAL;AACIP,MAAAA,YAAY,CAACE,OAAb,CAAqB,KAArB,EAA4B,IAA5B;AACA,aAAO,EACH,GAAGT,KADA;AAEHF,QAAAA,QAAQ,EAAE;AAFP,OAAP;;AAIJ,SAAK,UAAL;AACI,UAAImB,OAAO,GAAGhB,MAAM,CAACS,OAArB;AACA,aAAO,EACH,GAAGV,KADA;AAEHF,QAAAA,QAAQ,EAAEmB;AAFP,OAAP;;AAKJ;AACI,aAAOjB,KAAP;AA9BR;AAgCH,CAnCD;;AAsCA,eAAeD,IAAf","sourcesContent":["import jwt_decode from \"jwt-decode\"\nlet initialState = {\n    currUser: null,\n};\n\nconst auth = (state = initialState, action) => {\n    console.log(state.currUser);\n    console.log(state.data);\n    switch (action.type) {\n        case \"getUser\":\n            let getUser = localStorage.getItem(\"jwt\")\n\n        case \"login\":\n\n            localStorage.setItem(\"jwt\", action.payload.token)\n            return {\n                ...state,\n                currUser: action.payload.user,\n            };\n        case \"signup\":\n            let email = action.payload.email;\n            let value = JSON.stringify(action.payload);\n            localStorage.setItem(email, value);\n\n        case \"signout\":\n            localStorage.setItem(\"jwt\", null)\n            return {\n                ...state,\n                currUser: null,\n            };\n        case \"editUser\":\n            let newUser = action.payload\n            return {\n                ...state,\n                currUser: newUser,\n            };\n\n        default:\n            return state;\n    }\n};\n\n\nexport default auth;\n"]},"metadata":{},"sourceType":"module"}