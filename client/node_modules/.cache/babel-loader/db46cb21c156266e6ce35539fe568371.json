{"ast":null,"code":"import { act } from \"react-dom/test-utils\";\nimport data from \"../groceries/data\";\nlet initialState = {\n  data: data,\n  product: data,\n  search: \"\",\n  qty: 0,\n  cart: []\n};\n\nconst home = (state = initialState, action) => {\n  // console.log(action.payload);\n  switch (action.type) {\n    case \"addInBasket\":\n      let arr = [];\n      let basketObj = [];\n      let isPresent = state.cart.find(obj => {\n        return obj.id == action.payload.id;\n      });\n\n      if (isPresent == undefined) {\n        let obj = { ...action.payload,\n          qty: 1\n        };\n        basketObj = [...state.cart, obj];\n      } else {\n        basketObj = increaseQuantity(state.cart, action);\n      } // for(let i=0;i<state.data.length;i++){\n      //     if(state.data[i].id==action.payload.id){\n      //         let obj={...state.data[i],qty:state.data[i].qty+1}\n      //         arr[i]=obj\n      //     }else{\n      //         arr[i]=state.data[i]\n      //     }\n      // }\n\n\n      arr = increaseQuantity(state.data, action);\n      return { ...state,\n        data: arr,\n        qty: state.qty + 1,\n        cart: basketObj\n      };\n\n    case \"removeFromBasket\":\n      console.log(action);\n\n    default:\n      return state;\n  }\n};\n\nfunction increaseQuantity(array, action) {\n  let temp = [];\n\n  for (let i = 0; i < array.length; i++) {\n    let obj = array[i];\n\n    if (array[i].id == action.payload.id) {\n      obj = { ...array[i],\n        qty: array[i].qty + 1\n      };\n      temp[i] = obj;\n    } else {\n      temp[i] = obj;\n    }\n  }\n\n  return temp;\n}\n\nexport default home;","map":{"version":3,"sources":["/home/avnish.singh/Avnish/react/grocery-store/src/reducer/home.js"],"names":["act","data","initialState","product","search","qty","cart","home","state","action","type","arr","basketObj","isPresent","find","obj","id","payload","undefined","increaseQuantity","console","log","array","temp","i","length"],"mappings":"AAAA,SAASA,GAAT,QAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,IAAIC,YAAY,GAAC;AACbD,EAAAA,IAAI,EAACA,IADQ;AAEbE,EAAAA,OAAO,EAACF,IAFK;AAGbG,EAAAA,MAAM,EAAC,EAHM;AAIbC,EAAAA,GAAG,EAAC,CAJS;AAKbC,EAAAA,IAAI,EAAC;AALQ,CAAjB;;AAOA,MAAMC,IAAI,GAAC,CAACC,KAAK,GAACN,YAAP,EAAoBO,MAApB,KAA6B;AACpC;AACA,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AACI,UAAIC,GAAG,GAAC,EAAR;AACA,UAAIC,SAAS,GAAC,EAAd;AACA,UAAIC,SAAS,GAACL,KAAK,CAACF,IAAN,CAAWQ,IAAX,CAAgBC,GAAG,IAAE;AAC/B,eAAOA,GAAG,CAACC,EAAJ,IAAQP,MAAM,CAACQ,OAAP,CAAeD,EAA9B;AACH,OAFa,CAAd;;AAGA,UAAGH,SAAS,IAAEK,SAAd,EAAwB;AACrB,YAAIH,GAAG,GAAC,EAAC,GAAGN,MAAM,CAACQ,OAAX;AAAmBZ,UAAAA,GAAG,EAAC;AAAvB,SAAR;AAECO,QAAAA,SAAS,GAAC,CAAC,GAAGJ,KAAK,CAACF,IAAV,EAAeS,GAAf,CAAV;AACH,OAJD,MAIK;AACDH,QAAAA,SAAS,GAACO,gBAAgB,CAACX,KAAK,CAACF,IAAP,EAAYG,MAAZ,CAA1B;AACH,OAZL,CAaI;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AACAE,MAAAA,GAAG,GAACQ,gBAAgB,CAACX,KAAK,CAACP,IAAP,EAAYQ,MAAZ,CAApB;AACA,aAAO,EACH,GAAGD,KADA;AAEHP,QAAAA,IAAI,EAACU,GAFF;AAGHN,QAAAA,GAAG,EAACG,KAAK,CAACH,GAAN,GAAU,CAHX;AAIHC,QAAAA,IAAI,EAACM;AAJF,OAAP;;AAMJ,SAAK,kBAAL;AACIQ,MAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;;AACJ;AACI,aAAOD,KAAP;AAjCR;AAmCH,CArCD;;AAuCA,SAASW,gBAAT,CAA0BG,KAA1B,EAAgCb,MAAhC,EAAuC;AACnC,MAAIc,IAAI,GAAC,EAAT;;AACA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,KAAK,CAACG,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC3B,QAAIT,GAAG,GAACO,KAAK,CAACE,CAAD,CAAb;;AACA,QAAGF,KAAK,CAACE,CAAD,CAAL,CAASR,EAAT,IAAaP,MAAM,CAACQ,OAAP,CAAeD,EAA/B,EAAkC;AAC9BD,MAAAA,GAAG,GAAC,EAAC,GAAGO,KAAK,CAACE,CAAD,CAAT;AAAanB,QAAAA,GAAG,EAACiB,KAAK,CAACE,CAAD,CAAL,CAASnB,GAAT,GAAa;AAA9B,OAAJ;AACAkB,MAAAA,IAAI,CAACC,CAAD,CAAJ,GAAQT,GAAR;AACH,KAHD,MAGK;AACDQ,MAAAA,IAAI,CAACC,CAAD,CAAJ,GAAQT,GAAR;AACH;AACJ;;AACD,SAAOQ,IAAP;AACH;;AACD,eAAehB,IAAf","sourcesContent":["import { act } from \"react-dom/test-utils\"\nimport data from \"../groceries/data\"\nlet initialState={\n    data:data,\n    product:data,\n    search:\"\",\n    qty:0,\n    cart:[]\n}\nconst home=(state=initialState,action)=>{\n    // console.log(action.payload);\n    switch (action.type) {\n        case \"addInBasket\":\n            let arr=[]\n            let basketObj=[]\n            let isPresent=state.cart.find(obj=>{\n                return obj.id==action.payload.id\n            })  \n            if(isPresent==undefined){\n               let obj={...action.payload,qty:1}\n               \n                basketObj=[...state.cart,obj]\n            }else{\n                basketObj=increaseQuantity(state.cart,action)\n            }\n            // for(let i=0;i<state.data.length;i++){\n            //     if(state.data[i].id==action.payload.id){\n            //         let obj={...state.data[i],qty:state.data[i].qty+1}\n                  \n            //         arr[i]=obj\n            //     }else{\n            //         arr[i]=state.data[i]\n            //     }\n            // }\n            arr=increaseQuantity(state.data,action)\n            return {\n                ...state,\n                data:arr,\n                qty:state.qty+1,\n                cart:basketObj\n            }\n        case \"removeFromBasket\":\n            console.log(action);\n        default:\n            return state\n    }\n}\n\nfunction increaseQuantity(array,action){\n    let temp=[]\n    for(let i=0;i<array.length;i++){\n        let obj=array[i]\n        if(array[i].id==action.payload.id){\n            obj={...array[i],qty:array[i].qty+1}\n            temp[i]=obj\n        }else{\n            temp[i]=obj\n        }\n    }\n    return temp\n}\nexport default home"]},"metadata":{},"sourceType":"module"}